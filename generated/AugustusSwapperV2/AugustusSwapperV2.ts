// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class Bought extends ethereum.Event {
  get params(): Bought__Params {
    return new Bought__Params(this);
  }
}

export class Bought__Params {
  _event: Bought;

  constructor(event: Bought) {
    this._event = event;
  }

  get initiator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get beneficiary(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get srcToken(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get destToken(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get srcAmount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get receivedAmount(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get expectedAmount(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get referrer(): string {
    return this._event.parameters[7].value.toString();
  }
}

export class Donation extends ethereum.Event {
  get params(): Donation__Params {
    return new Donation__Params(this);
  }
}

export class Donation__Params {
  _event: Donation;

  constructor(event: Donation) {
    this._event = event;
  }

  get receiver(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get donationBasisPoints(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class FeeTaken extends ethereum.Event {
  get params(): FeeTaken__Params {
    return new FeeTaken__Params(this);
  }
}

export class FeeTaken__Params {
  _event: FeeTaken;

  constructor(event: FeeTaken) {
    this._event = event;
  }

  get fee(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get partnerShare(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get paraswapShare(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Paused extends ethereum.Event {
  get params(): Paused__Params {
    return new Paused__Params(this);
  }
}

export class Paused__Params {
  _event: Paused;

  constructor(event: Paused) {
    this._event = event;
  }
}

export class Swapped extends ethereum.Event {
  get params(): Swapped__Params {
    return new Swapped__Params(this);
  }
}

export class Swapped__Params {
  _event: Swapped;

  constructor(event: Swapped) {
    this._event = event;
  }

  get initiator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get beneficiary(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get srcToken(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get destToken(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get srcAmount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get receivedAmount(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get expectedAmount(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get referrer(): string {
    return this._event.parameters[7].value.toString();
  }
}

export class Unpaused extends ethereum.Event {
  get params(): Unpaused__Params {
    return new Unpaused__Params(this);
  }
}

export class Unpaused__Params {
  _event: Unpaused;

  constructor(event: Unpaused) {
    this._event = event;
  }
}

export class AugustusSwapperV2 extends ethereum.SmartContract {
  static bind(address: Address): AugustusSwapperV2 {
    return new AugustusSwapperV2("AugustusSwapperV2", address);
  }

  getFeeWallet(): Address {
    let result = super.call("getFeeWallet", "getFeeWallet():(address)", []);

    return result[0].toAddress();
  }

  try_getFeeWallet(): ethereum.CallResult<Address> {
    let result = super.tryCall("getFeeWallet", "getFeeWallet():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getPartnerRegistry(): Address {
    let result = super.call(
      "getPartnerRegistry",
      "getPartnerRegistry():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_getPartnerRegistry(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getPartnerRegistry",
      "getPartnerRegistry():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getTokenTransferProxy(): Address {
    let result = super.call(
      "getTokenTransferProxy",
      "getTokenTransferProxy():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_getTokenTransferProxy(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getTokenTransferProxy",
      "getTokenTransferProxy():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getVersion(): string {
    let result = super.call("getVersion", "getVersion():(string)", []);

    return result[0].toString();
  }

  try_getVersion(): ethereum.CallResult<string> {
    let result = super.tryCall("getVersion", "getVersion():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  getWhitelistAddress(): Address {
    let result = super.call(
      "getWhitelistAddress",
      "getWhitelistAddress():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_getWhitelistAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getWhitelistAddress",
      "getWhitelistAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  paused(): boolean {
    let result = super.call("paused", "paused():(bool)", []);

    return result[0].toBoolean();
  }

  try_paused(): ethereum.CallResult<boolean> {
    let result = super.tryCall("paused", "paused():(bool)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get whitelist(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get gasToken(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get partnerRegistry(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get feeWallet(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get gstHolder(): Address {
    return this._call.inputValues[4].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class BuyCall extends ethereum.Call {
  get inputs(): BuyCall__Inputs {
    return new BuyCall__Inputs(this);
  }

  get outputs(): BuyCall__Outputs {
    return new BuyCall__Outputs(this);
  }
}

export class BuyCall__Inputs {
  _call: BuyCall;

  constructor(call: BuyCall) {
    this._call = call;
  }

  get fromToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get toToken(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get fromAmount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get toAmount(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get expectedAmount(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get route(): Array<BuyCallRouteStruct> {
    return this._call.inputValues[5].value.toTupleArray<BuyCallRouteStruct>();
  }

  get mintPrice(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }

  get beneficiary(): Address {
    return this._call.inputValues[7].value.toAddress();
  }

  get donationBasisPoints(): BigInt {
    return this._call.inputValues[8].value.toBigInt();
  }

  get referrer(): string {
    return this._call.inputValues[9].value.toString();
  }
}

export class BuyCall__Outputs {
  _call: BuyCall;

  constructor(call: BuyCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class BuyCallRouteStruct extends ethereum.Tuple {
  get exchange(): Address {
    return this[0].toAddress();
  }

  get targetExchange(): Address {
    return this[1].toAddress();
  }

  get fromAmount(): BigInt {
    return this[2].toBigInt();
  }

  get toAmount(): BigInt {
    return this[3].toBigInt();
  }

  get payload(): Bytes {
    return this[4].toBytes();
  }

  get networkFee(): BigInt {
    return this[5].toBigInt();
  }
}

export class ChangeGSTHolderCall extends ethereum.Call {
  get inputs(): ChangeGSTHolderCall__Inputs {
    return new ChangeGSTHolderCall__Inputs(this);
  }

  get outputs(): ChangeGSTHolderCall__Outputs {
    return new ChangeGSTHolderCall__Outputs(this);
  }
}

export class ChangeGSTHolderCall__Inputs {
  _call: ChangeGSTHolderCall;

  constructor(call: ChangeGSTHolderCall) {
    this._call = call;
  }

  get gstHolder(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ChangeGSTHolderCall__Outputs {
  _call: ChangeGSTHolderCall;

  constructor(call: ChangeGSTHolderCall) {
    this._call = call;
  }
}

export class MultiSwapCall extends ethereum.Call {
  get inputs(): MultiSwapCall__Inputs {
    return new MultiSwapCall__Inputs(this);
  }

  get outputs(): MultiSwapCall__Outputs {
    return new MultiSwapCall__Outputs(this);
  }
}

export class MultiSwapCall__Inputs {
  _call: MultiSwapCall;

  constructor(call: MultiSwapCall) {
    this._call = call;
  }

  get fromToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get toToken(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get fromAmount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get toAmount(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get expectedAmount(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get path(): Array<MultiSwapCallPathStruct> {
    return this._call.inputValues[5].value.toTupleArray<
      MultiSwapCallPathStruct
    >();
  }

  get mintPrice(): BigInt {
    return this._call.inputValues[6].value.toBigInt();
  }

  get beneficiary(): Address {
    return this._call.inputValues[7].value.toAddress();
  }

  get donationBasisPoints(): BigInt {
    return this._call.inputValues[8].value.toBigInt();
  }

  get referrer(): string {
    return this._call.inputValues[9].value.toString();
  }
}

export class MultiSwapCall__Outputs {
  _call: MultiSwapCall;

  constructor(call: MultiSwapCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class MultiSwapCallPathStruct extends ethereum.Tuple {
  get to(): Address {
    return this[0].toAddress();
  }

  get totalNetworkFee(): BigInt {
    return this[1].toBigInt();
  }

  get routes(): Array<MultiSwapCallPathRoutesStruct> {
    return this[2].toTupleArray<MultiSwapCallPathRoutesStruct>();
  }
}

export class MultiSwapCallPathRoutesStruct extends ethereum.Tuple {
  get exchange(): Address {
    return this[0].toAddress();
  }

  get targetExchange(): Address {
    return this[1].toAddress();
  }

  get percent(): BigInt {
    return this[2].toBigInt();
  }

  get payload(): Bytes {
    return this[3].toBytes();
  }

  get networkFee(): BigInt {
    return this[4].toBigInt();
  }
}

export class OwnerTransferTokensCall extends ethereum.Call {
  get inputs(): OwnerTransferTokensCall__Inputs {
    return new OwnerTransferTokensCall__Inputs(this);
  }

  get outputs(): OwnerTransferTokensCall__Outputs {
    return new OwnerTransferTokensCall__Outputs(this);
  }
}

export class OwnerTransferTokensCall__Inputs {
  _call: OwnerTransferTokensCall;

  constructor(call: OwnerTransferTokensCall) {
    this._call = call;
  }

  get token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get destination(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class OwnerTransferTokensCall__Outputs {
  _call: OwnerTransferTokensCall;

  constructor(call: OwnerTransferTokensCall) {
    this._call = call;
  }
}

export class PauseCall extends ethereum.Call {
  get inputs(): PauseCall__Inputs {
    return new PauseCall__Inputs(this);
  }

  get outputs(): PauseCall__Outputs {
    return new PauseCall__Outputs(this);
  }
}

export class PauseCall__Inputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class PauseCall__Outputs {
  _call: PauseCall;

  constructor(call: PauseCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetFeeWalletCall extends ethereum.Call {
  get inputs(): SetFeeWalletCall__Inputs {
    return new SetFeeWalletCall__Inputs(this);
  }

  get outputs(): SetFeeWalletCall__Outputs {
    return new SetFeeWalletCall__Outputs(this);
  }
}

export class SetFeeWalletCall__Inputs {
  _call: SetFeeWalletCall;

  constructor(call: SetFeeWalletCall) {
    this._call = call;
  }

  get feeWallet(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetFeeWalletCall__Outputs {
  _call: SetFeeWalletCall;

  constructor(call: SetFeeWalletCall) {
    this._call = call;
  }
}

export class SetPartnerRegistryCall extends ethereum.Call {
  get inputs(): SetPartnerRegistryCall__Inputs {
    return new SetPartnerRegistryCall__Inputs(this);
  }

  get outputs(): SetPartnerRegistryCall__Outputs {
    return new SetPartnerRegistryCall__Outputs(this);
  }
}

export class SetPartnerRegistryCall__Inputs {
  _call: SetPartnerRegistryCall;

  constructor(call: SetPartnerRegistryCall) {
    this._call = call;
  }

  get partnerRegistry(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetPartnerRegistryCall__Outputs {
  _call: SetPartnerRegistryCall;

  constructor(call: SetPartnerRegistryCall) {
    this._call = call;
  }
}

export class SetWhitelistAddressCall extends ethereum.Call {
  get inputs(): SetWhitelistAddressCall__Inputs {
    return new SetWhitelistAddressCall__Inputs(this);
  }

  get outputs(): SetWhitelistAddressCall__Outputs {
    return new SetWhitelistAddressCall__Outputs(this);
  }
}

export class SetWhitelistAddressCall__Inputs {
  _call: SetWhitelistAddressCall;

  constructor(call: SetWhitelistAddressCall) {
    this._call = call;
  }

  get whitelisted(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetWhitelistAddressCall__Outputs {
  _call: SetWhitelistAddressCall;

  constructor(call: SetWhitelistAddressCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class UnpauseCall extends ethereum.Call {
  get inputs(): UnpauseCall__Inputs {
    return new UnpauseCall__Inputs(this);
  }

  get outputs(): UnpauseCall__Outputs {
    return new UnpauseCall__Outputs(this);
  }
}

export class UnpauseCall__Inputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}

export class UnpauseCall__Outputs {
  _call: UnpauseCall;

  constructor(call: UnpauseCall) {
    this._call = call;
  }
}
