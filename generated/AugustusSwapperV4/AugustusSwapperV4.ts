// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class AdapterInitialized extends ethereum.Event {
  get params(): AdapterInitialized__Params {
    return new AdapterInitialized__Params(this);
  }
}

export class AdapterInitialized__Params {
  _event: AdapterInitialized;

  constructor(event: AdapterInitialized) {
    this._event = event;
  }

  get adapter(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class Bought extends ethereum.Event {
  get params(): Bought__Params {
    return new Bought__Params(this);
  }
}

export class Bought__Params {
  _event: Bought;

  constructor(event: Bought) {
    this._event = event;
  }

  get initiator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get beneficiary(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get srcToken(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get destToken(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get srcAmount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get receivedAmount(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get referrer(): string {
    return this._event.parameters[6].value.toString();
  }
}

export class FeeTaken extends ethereum.Event {
  get params(): FeeTaken__Params {
    return new FeeTaken__Params(this);
  }
}

export class FeeTaken__Params {
  _event: FeeTaken;

  constructor(event: FeeTaken) {
    this._event = event;
  }

  get fee(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get partnerShare(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get paraswapShare(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class Swapped extends ethereum.Event {
  get params(): Swapped__Params {
    return new Swapped__Params(this);
  }
}

export class Swapped__Params {
  _event: Swapped;

  constructor(event: Swapped) {
    this._event = event;
  }

  get initiator(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get beneficiary(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get srcToken(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get destToken(): Address {
    return this._event.parameters[3].value.toAddress();
  }

  get srcAmount(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get receivedAmount(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get expectedAmount(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get referrer(): string {
    return this._event.parameters[7].value.toString();
  }
}

export class AugustusSwapperV4 extends ethereum.SmartContract {
  static bind(address: Address): AugustusSwapperV4 {
    return new AugustusSwapperV4("AugustusSwapperV4", address);
  }

  getChangeRequestedBlock(): BigInt {
    let result = super.call(
      "getChangeRequestedBlock",
      "getChangeRequestedBlock():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_getChangeRequestedBlock(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "getChangeRequestedBlock",
      "getChangeRequestedBlock():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getData(key: Bytes): Bytes {
    let result = super.call("getData", "getData(bytes32):(bytes)", [
      ethereum.Value.fromFixedBytes(key)
    ]);

    return result[0].toBytes();
  }

  try_getData(key: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall("getData", "getData(bytes32):(bytes)", [
      ethereum.Value.fromFixedBytes(key)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  getFeeWallet(): Address {
    let result = super.call("getFeeWallet", "getFeeWallet():(address)", []);

    return result[0].toAddress();
  }

  try_getFeeWallet(): ethereum.CallResult<Address> {
    let result = super.tryCall("getFeeWallet", "getFeeWallet():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getPartnerRegistry(): Address {
    let result = super.call(
      "getPartnerRegistry",
      "getPartnerRegistry():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_getPartnerRegistry(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getPartnerRegistry",
      "getPartnerRegistry():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getPendingUniswapProxy(): Address {
    let result = super.call(
      "getPendingUniswapProxy",
      "getPendingUniswapProxy():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_getPendingUniswapProxy(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getPendingUniswapProxy",
      "getPendingUniswapProxy():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getTimeLock(): BigInt {
    let result = super.call("getTimeLock", "getTimeLock():(uint256)", []);

    return result[0].toBigInt();
  }

  try_getTimeLock(): ethereum.CallResult<BigInt> {
    let result = super.tryCall("getTimeLock", "getTimeLock():(uint256)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  getTokenTransferProxy(): Address {
    let result = super.call(
      "getTokenTransferProxy",
      "getTokenTransferProxy():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_getTokenTransferProxy(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getTokenTransferProxy",
      "getTokenTransferProxy():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getUniswapProxy(): Address {
    let result = super.call(
      "getUniswapProxy",
      "getUniswapProxy():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_getUniswapProxy(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getUniswapProxy",
      "getUniswapProxy():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getVersion(): string {
    let result = super.call("getVersion", "getVersion():(string)", []);

    return result[0].toString();
  }

  try_getVersion(): ethereum.CallResult<string> {
    let result = super.tryCall("getVersion", "getVersion():(string)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  getWhitelistAddress(): Address {
    let result = super.call(
      "getWhitelistAddress",
      "getWhitelistAddress():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_getWhitelistAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getWhitelistAddress",
      "getWhitelistAddress():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  isInitialized(key: Bytes): boolean {
    let result = super.call("isInitialized", "isInitialized(bytes32):(bool)", [
      ethereum.Value.fromFixedBytes(key)
    ]);

    return result[0].toBoolean();
  }

  try_isInitialized(key: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "isInitialized",
      "isInitialized(bytes32):(bool)",
      [ethereum.Value.fromFixedBytes(key)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ApproveCall extends ethereum.Call {
  get inputs(): ApproveCall__Inputs {
    return new ApproveCall__Inputs(this);
  }

  get outputs(): ApproveCall__Outputs {
    return new ApproveCall__Outputs(this);
  }
}

export class ApproveCall__Inputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }

  get token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class ApproveCall__Outputs {
  _call: ApproveCall;

  constructor(call: ApproveCall) {
    this._call = call;
  }
}

export class BuyCall extends ethereum.Call {
  get inputs(): BuyCall__Inputs {
    return new BuyCall__Inputs(this);
  }

  get outputs(): BuyCall__Outputs {
    return new BuyCall__Outputs(this);
  }
}

export class BuyCall__Inputs {
  _call: BuyCall;

  constructor(call: BuyCall) {
    this._call = call;
  }

  get data(): BuyCallDataStruct {
    return this._call.inputValues[0].value.toTuple() as BuyCallDataStruct;
  }
}

export class BuyCall__Outputs {
  _call: BuyCall;

  constructor(call: BuyCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class BuyCallDataStruct extends ethereum.Tuple {
  get fromToken(): Address {
    return this[0].toAddress();
  }

  get toToken(): Address {
    return this[1].toAddress();
  }

  get fromAmount(): BigInt {
    return this[2].toBigInt();
  }

  get toAmount(): BigInt {
    return this[3].toBigInt();
  }

  get beneficiary(): Address {
    return this[4].toAddress();
  }

  get referrer(): string {
    return this[5].toString();
  }

  get useReduxToken(): boolean {
    return this[6].toBoolean();
  }

  get route(): Array<BuyCallDataRouteStruct> {
    return this[7].toTupleArray<BuyCallDataRouteStruct>();
  }
}

export class BuyCallDataRouteStruct extends ethereum.Tuple {
  get exchange(): Address {
    return this[0].toAddress();
  }

  get targetExchange(): Address {
    return this[1].toAddress();
  }

  get fromAmount(): BigInt {
    return this[2].toBigInt();
  }

  get toAmount(): BigInt {
    return this[3].toBigInt();
  }

  get payload(): Bytes {
    return this[4].toBytes();
  }

  get networkFee(): BigInt {
    return this[5].toBigInt();
  }
}

export class BuyOnUniswapCall extends ethereum.Call {
  get inputs(): BuyOnUniswapCall__Inputs {
    return new BuyOnUniswapCall__Inputs(this);
  }

  get outputs(): BuyOnUniswapCall__Outputs {
    return new BuyOnUniswapCall__Outputs(this);
  }
}

export class BuyOnUniswapCall__Inputs {
  _call: BuyOnUniswapCall;

  constructor(call: BuyOnUniswapCall) {
    this._call = call;
  }

  get amountInMax(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get amountOut(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get path(): Array<Address> {
    return this._call.inputValues[2].value.toAddressArray();
  }

  get referrer(): i32 {
    return this._call.inputValues[3].value.toI32();
  }
}

export class BuyOnUniswapCall__Outputs {
  _call: BuyOnUniswapCall;

  constructor(call: BuyOnUniswapCall) {
    this._call = call;
  }
}

export class BuyOnUniswapForkCall extends ethereum.Call {
  get inputs(): BuyOnUniswapForkCall__Inputs {
    return new BuyOnUniswapForkCall__Inputs(this);
  }

  get outputs(): BuyOnUniswapForkCall__Outputs {
    return new BuyOnUniswapForkCall__Outputs(this);
  }
}

export class BuyOnUniswapForkCall__Inputs {
  _call: BuyOnUniswapForkCall;

  constructor(call: BuyOnUniswapForkCall) {
    this._call = call;
  }

  get factory(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get initCode(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get amountInMax(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get amountOut(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get path(): Array<Address> {
    return this._call.inputValues[4].value.toAddressArray();
  }

  get referrer(): i32 {
    return this._call.inputValues[5].value.toI32();
  }
}

export class BuyOnUniswapForkCall__Outputs {
  _call: BuyOnUniswapForkCall;

  constructor(call: BuyOnUniswapForkCall) {
    this._call = call;
  }
}

export class ChangeUniswapProxyCall extends ethereum.Call {
  get inputs(): ChangeUniswapProxyCall__Inputs {
    return new ChangeUniswapProxyCall__Inputs(this);
  }

  get outputs(): ChangeUniswapProxyCall__Outputs {
    return new ChangeUniswapProxyCall__Outputs(this);
  }
}

export class ChangeUniswapProxyCall__Inputs {
  _call: ChangeUniswapProxyCall;

  constructor(call: ChangeUniswapProxyCall) {
    this._call = call;
  }

  get uniswapProxy(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class ChangeUniswapProxyCall__Outputs {
  _call: ChangeUniswapProxyCall;

  constructor(call: ChangeUniswapProxyCall) {
    this._call = call;
  }
}

export class ConfirmUniswapProxyChangeCall extends ethereum.Call {
  get inputs(): ConfirmUniswapProxyChangeCall__Inputs {
    return new ConfirmUniswapProxyChangeCall__Inputs(this);
  }

  get outputs(): ConfirmUniswapProxyChangeCall__Outputs {
    return new ConfirmUniswapProxyChangeCall__Outputs(this);
  }
}

export class ConfirmUniswapProxyChangeCall__Inputs {
  _call: ConfirmUniswapProxyChangeCall;

  constructor(call: ConfirmUniswapProxyChangeCall) {
    this._call = call;
  }
}

export class ConfirmUniswapProxyChangeCall__Outputs {
  _call: ConfirmUniswapProxyChangeCall;

  constructor(call: ConfirmUniswapProxyChangeCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get whitelist(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get reduxToken(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get partnerRegistry(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get feeWallet(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get uniswapProxy(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get timelock(): BigInt {
    return this._call.inputValues[5].value.toBigInt();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class InitializeAdapterCall extends ethereum.Call {
  get inputs(): InitializeAdapterCall__Inputs {
    return new InitializeAdapterCall__Inputs(this);
  }

  get outputs(): InitializeAdapterCall__Outputs {
    return new InitializeAdapterCall__Outputs(this);
  }
}

export class InitializeAdapterCall__Inputs {
  _call: InitializeAdapterCall;

  constructor(call: InitializeAdapterCall) {
    this._call = call;
  }

  get adapter(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get data(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class InitializeAdapterCall__Outputs {
  _call: InitializeAdapterCall;

  constructor(call: InitializeAdapterCall) {
    this._call = call;
  }
}

export class MegaSwapCall extends ethereum.Call {
  get inputs(): MegaSwapCall__Inputs {
    return new MegaSwapCall__Inputs(this);
  }

  get outputs(): MegaSwapCall__Outputs {
    return new MegaSwapCall__Outputs(this);
  }
}

export class MegaSwapCall__Inputs {
  _call: MegaSwapCall;

  constructor(call: MegaSwapCall) {
    this._call = call;
  }

  get data(): MegaSwapCallDataStruct {
    return this._call.inputValues[0].value.toTuple() as MegaSwapCallDataStruct;
  }
}

export class MegaSwapCall__Outputs {
  _call: MegaSwapCall;

  constructor(call: MegaSwapCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class MegaSwapCallDataStruct extends ethereum.Tuple {
  get fromToken(): Address {
    return this[0].toAddress();
  }

  get fromAmount(): BigInt {
    return this[1].toBigInt();
  }

  get toAmount(): BigInt {
    return this[2].toBigInt();
  }

  get expectedAmount(): BigInt {
    return this[3].toBigInt();
  }

  get beneficiary(): Address {
    return this[4].toAddress();
  }

  get referrer(): string {
    return this[5].toString();
  }

  get useReduxToken(): boolean {
    return this[6].toBoolean();
  }

  get path(): Array<MegaSwapCallDataPathStruct> {
    return this[7].toTupleArray<MegaSwapCallDataPathStruct>();
  }
}

export class MegaSwapCallDataPathStruct extends ethereum.Tuple {
  get fromAmountPercent(): BigInt {
    return this[0].toBigInt();
  }

  get path(): Array<MegaSwapCallDataPathPathStruct> {
    return this[1].toTupleArray<MegaSwapCallDataPathPathStruct>();
  }
}

export class MegaSwapCallDataPathPathStruct extends ethereum.Tuple {
  get to(): Address {
    return this[0].toAddress();
  }

  get totalNetworkFee(): BigInt {
    return this[1].toBigInt();
  }

  get routes(): Array<MegaSwapCallDataPathPathRoutesStruct> {
    return this[2].toTupleArray<MegaSwapCallDataPathPathRoutesStruct>();
  }
}

export class MegaSwapCallDataPathPathRoutesStruct extends ethereum.Tuple {
  get exchange(): Address {
    return this[0].toAddress();
  }

  get targetExchange(): Address {
    return this[1].toAddress();
  }

  get percent(): BigInt {
    return this[2].toBigInt();
  }

  get payload(): Bytes {
    return this[3].toBytes();
  }

  get networkFee(): BigInt {
    return this[4].toBigInt();
  }
}

export class MultiSwapCall extends ethereum.Call {
  get inputs(): MultiSwapCall__Inputs {
    return new MultiSwapCall__Inputs(this);
  }

  get outputs(): MultiSwapCall__Outputs {
    return new MultiSwapCall__Outputs(this);
  }
}

export class MultiSwapCall__Inputs {
  _call: MultiSwapCall;

  constructor(call: MultiSwapCall) {
    this._call = call;
  }

  get data(): MultiSwapCallDataStruct {
    return this._call.inputValues[0].value.toTuple() as MultiSwapCallDataStruct;
  }
}

export class MultiSwapCall__Outputs {
  _call: MultiSwapCall;

  constructor(call: MultiSwapCall) {
    this._call = call;
  }

  get value0(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class MultiSwapCallDataStruct extends ethereum.Tuple {
  get fromToken(): Address {
    return this[0].toAddress();
  }

  get fromAmount(): BigInt {
    return this[1].toBigInt();
  }

  get toAmount(): BigInt {
    return this[2].toBigInt();
  }

  get expectedAmount(): BigInt {
    return this[3].toBigInt();
  }

  get beneficiary(): Address {
    return this[4].toAddress();
  }

  get referrer(): string {
    return this[5].toString();
  }

  get useReduxToken(): boolean {
    return this[6].toBoolean();
  }

  get path(): Array<MultiSwapCallDataPathStruct> {
    return this[7].toTupleArray<MultiSwapCallDataPathStruct>();
  }
}

export class MultiSwapCallDataPathStruct extends ethereum.Tuple {
  get to(): Address {
    return this[0].toAddress();
  }

  get totalNetworkFee(): BigInt {
    return this[1].toBigInt();
  }

  get routes(): Array<MultiSwapCallDataPathRoutesStruct> {
    return this[2].toTupleArray<MultiSwapCallDataPathRoutesStruct>();
  }
}

export class MultiSwapCallDataPathRoutesStruct extends ethereum.Tuple {
  get exchange(): Address {
    return this[0].toAddress();
  }

  get targetExchange(): Address {
    return this[1].toAddress();
  }

  get percent(): BigInt {
    return this[2].toBigInt();
  }

  get payload(): Bytes {
    return this[3].toBytes();
  }

  get networkFee(): BigInt {
    return this[4].toBigInt();
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetFeeWalletCall extends ethereum.Call {
  get inputs(): SetFeeWalletCall__Inputs {
    return new SetFeeWalletCall__Inputs(this);
  }

  get outputs(): SetFeeWalletCall__Outputs {
    return new SetFeeWalletCall__Outputs(this);
  }
}

export class SetFeeWalletCall__Inputs {
  _call: SetFeeWalletCall;

  constructor(call: SetFeeWalletCall) {
    this._call = call;
  }

  get feeWallet(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetFeeWalletCall__Outputs {
  _call: SetFeeWalletCall;

  constructor(call: SetFeeWalletCall) {
    this._call = call;
  }
}

export class SetPartnerRegistryCall extends ethereum.Call {
  get inputs(): SetPartnerRegistryCall__Inputs {
    return new SetPartnerRegistryCall__Inputs(this);
  }

  get outputs(): SetPartnerRegistryCall__Outputs {
    return new SetPartnerRegistryCall__Outputs(this);
  }
}

export class SetPartnerRegistryCall__Inputs {
  _call: SetPartnerRegistryCall;

  constructor(call: SetPartnerRegistryCall) {
    this._call = call;
  }

  get partnerRegistry(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetPartnerRegistryCall__Outputs {
  _call: SetPartnerRegistryCall;

  constructor(call: SetPartnerRegistryCall) {
    this._call = call;
  }
}

export class SetWhitelistAddressCall extends ethereum.Call {
  get inputs(): SetWhitelistAddressCall__Inputs {
    return new SetWhitelistAddressCall__Inputs(this);
  }

  get outputs(): SetWhitelistAddressCall__Outputs {
    return new SetWhitelistAddressCall__Outputs(this);
  }
}

export class SetWhitelistAddressCall__Inputs {
  _call: SetWhitelistAddressCall;

  constructor(call: SetWhitelistAddressCall) {
    this._call = call;
  }

  get whitelisted(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetWhitelistAddressCall__Outputs {
  _call: SetWhitelistAddressCall;

  constructor(call: SetWhitelistAddressCall) {
    this._call = call;
  }
}

export class SimplBuyCall extends ethereum.Call {
  get inputs(): SimplBuyCall__Inputs {
    return new SimplBuyCall__Inputs(this);
  }

  get outputs(): SimplBuyCall__Outputs {
    return new SimplBuyCall__Outputs(this);
  }
}

export class SimplBuyCall__Inputs {
  _call: SimplBuyCall;

  constructor(call: SimplBuyCall) {
    this._call = call;
  }

  get fromToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get toToken(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get fromAmount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get toAmount(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get callees(): Array<Address> {
    return this._call.inputValues[4].value.toAddressArray();
  }

  get exchangeData(): Bytes {
    return this._call.inputValues[5].value.toBytes();
  }

  get startIndexes(): Array<BigInt> {
    return this._call.inputValues[6].value.toBigIntArray();
  }

  get values(): Array<BigInt> {
    return this._call.inputValues[7].value.toBigIntArray();
  }

  get beneficiary(): Address {
    return this._call.inputValues[8].value.toAddress();
  }

  get referrer(): string {
    return this._call.inputValues[9].value.toString();
  }

  get useReduxToken(): boolean {
    return this._call.inputValues[10].value.toBoolean();
  }
}

export class SimplBuyCall__Outputs {
  _call: SimplBuyCall;

  constructor(call: SimplBuyCall) {
    this._call = call;
  }
}

export class SimpleSwapCall extends ethereum.Call {
  get inputs(): SimpleSwapCall__Inputs {
    return new SimpleSwapCall__Inputs(this);
  }

  get outputs(): SimpleSwapCall__Outputs {
    return new SimpleSwapCall__Outputs(this);
  }
}

export class SimpleSwapCall__Inputs {
  _call: SimpleSwapCall;

  constructor(call: SimpleSwapCall) {
    this._call = call;
  }

  get fromToken(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get toToken(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get fromAmount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get toAmount(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get expectedAmount(): BigInt {
    return this._call.inputValues[4].value.toBigInt();
  }

  get callees(): Array<Address> {
    return this._call.inputValues[5].value.toAddressArray();
  }

  get exchangeData(): Bytes {
    return this._call.inputValues[6].value.toBytes();
  }

  get startIndexes(): Array<BigInt> {
    return this._call.inputValues[7].value.toBigIntArray();
  }

  get values(): Array<BigInt> {
    return this._call.inputValues[8].value.toBigIntArray();
  }

  get beneficiary(): Address {
    return this._call.inputValues[9].value.toAddress();
  }

  get referrer(): string {
    return this._call.inputValues[10].value.toString();
  }

  get useReduxToken(): boolean {
    return this._call.inputValues[11].value.toBoolean();
  }
}

export class SimpleSwapCall__Outputs {
  _call: SimpleSwapCall;

  constructor(call: SimpleSwapCall) {
    this._call = call;
  }

  get receivedAmount(): BigInt {
    return this._call.outputValues[0].value.toBigInt();
  }
}

export class SwapOnUniswapCall extends ethereum.Call {
  get inputs(): SwapOnUniswapCall__Inputs {
    return new SwapOnUniswapCall__Inputs(this);
  }

  get outputs(): SwapOnUniswapCall__Outputs {
    return new SwapOnUniswapCall__Outputs(this);
  }
}

export class SwapOnUniswapCall__Inputs {
  _call: SwapOnUniswapCall;

  constructor(call: SwapOnUniswapCall) {
    this._call = call;
  }

  get amountIn(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get amountOutMin(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get path(): Array<Address> {
    return this._call.inputValues[2].value.toAddressArray();
  }

  get referrer(): i32 {
    return this._call.inputValues[3].value.toI32();
  }
}

export class SwapOnUniswapCall__Outputs {
  _call: SwapOnUniswapCall;

  constructor(call: SwapOnUniswapCall) {
    this._call = call;
  }
}

export class SwapOnUniswapForkCall extends ethereum.Call {
  get inputs(): SwapOnUniswapForkCall__Inputs {
    return new SwapOnUniswapForkCall__Inputs(this);
  }

  get outputs(): SwapOnUniswapForkCall__Outputs {
    return new SwapOnUniswapForkCall__Outputs(this);
  }
}

export class SwapOnUniswapForkCall__Inputs {
  _call: SwapOnUniswapForkCall;

  constructor(call: SwapOnUniswapForkCall) {
    this._call = call;
  }

  get factory(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get initCode(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get amountIn(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get amountOutMin(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get path(): Array<Address> {
    return this._call.inputValues[4].value.toAddressArray();
  }

  get referrer(): i32 {
    return this._call.inputValues[5].value.toI32();
  }
}

export class SwapOnUniswapForkCall__Outputs {
  _call: SwapOnUniswapForkCall;

  constructor(call: SwapOnUniswapForkCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class TransferTokensCall extends ethereum.Call {
  get inputs(): TransferTokensCall__Inputs {
    return new TransferTokensCall__Inputs(this);
  }

  get outputs(): TransferTokensCall__Outputs {
    return new TransferTokensCall__Outputs(this);
  }
}

export class TransferTokensCall__Inputs {
  _call: TransferTokensCall;

  constructor(call: TransferTokensCall) {
    this._call = call;
  }

  get token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get destination(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class TransferTokensCall__Outputs {
  _call: TransferTokensCall;

  constructor(call: TransferTokensCall) {
    this._call = call;
  }
}

export class WithdrawAllWETHCall extends ethereum.Call {
  get inputs(): WithdrawAllWETHCall__Inputs {
    return new WithdrawAllWETHCall__Inputs(this);
  }

  get outputs(): WithdrawAllWETHCall__Outputs {
    return new WithdrawAllWETHCall__Outputs(this);
  }
}

export class WithdrawAllWETHCall__Inputs {
  _call: WithdrawAllWETHCall;

  constructor(call: WithdrawAllWETHCall) {
    this._call = call;
  }

  get token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class WithdrawAllWETHCall__Outputs {
  _call: WithdrawAllWETHCall;

  constructor(call: WithdrawAllWETHCall) {
    this._call = call;
  }
}
